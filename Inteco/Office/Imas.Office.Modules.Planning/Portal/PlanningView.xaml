<UserControl x:Class="Imas.Office.Modules.Planning.Portal.PlanningView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:itc="http://schemas.inteco.at/winfx/xaml/"
             xmlns:itcl="http://schemas.inteco.at/winfx/xaml/localization"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             xmlns:converters="clr-namespace:Imas.Office.Modules.Planning.Converters"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d"
             Background="White"
             prism:ViewModelLocator.AutoWireViewModel="True">
    <i:Interaction.Behaviors>
        <itc:BindableLifetimeBehavior />
    </i:Interaction.Behaviors>

    <UserControl.Resources>
        <ResourceDictionary>

            <!-- Control Colors -->
            <Color x:Key="TextButtonColor">#5D9FCA</Color>
            <Color x:Key="StatusGreenColor">#28BB77</Color>
            <Color x:Key="StatusRedColor">#EC7D61</Color>
            <Color x:Key="StatusYellowColor">#EBE54C</Color>
            <Color x:Key="StatusWhiteColor">#FFFFFF</Color>

            <!-- Converters -->
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <itc:LocalizeValueConverter x:Key="LocalizeValueConverter" />
            <converters:ProductionOrderStatusToColorConverter x:Key="ProductionOrderToBackgroundConverter" />
            <converters:ProductionOrderStatusToInfoVisibilityConverter x:Key="ProductionOrderStatusToInfoVisibilityConverter" />
            <converters:ListGroupingToItemCountConverter x:Key="ListGroupingToItemCountConverter" />
            <converters:ListGroupingToDeliveryDateConverter x:Key="ListGroupingToDeliveryDateConverter" />
            <converters:DataSheetToIconConverter x:Key="DataSheetToIconConverter" />
            <converters:DataSheetToTooltipConverter x:Key="DataSheetToTooltipConverter" />
            <converters:OperationCardToIconConverter x:Key="OperationCardToIconConverter" />
            <converters:OperationCardToTooltipConverter x:Key="OperationCardToTooltipConverter" />
            <converters:ListGroupingToGroupItemConverter x:Key="ListGroupingToGroupItemConverter" />
            <converters:ListGroupingToGroupItemBackgroundConverter x:Key="ListGroupingToGroupItemBackgroundConverter" />
            <converters:PlantNameHackConverter x:Key="PlantNameHackConverter" />

            <!-- Data Templates -->
            <DataTemplate x:Key="CheckBoxCell">
                <StackPanel Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding Path=IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}}" Visibility="{Binding NotGroupHeader, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="HeaderTemplateArrowUp">
                <DockPanel LastChildFill="True" Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GridViewColumnHeader}}}">
                    <Path x:Name="arrowUp" StrokeThickness="1" Fill="Gray" Data="M 5,10 L 15,10 L 10,5 L 5,10" DockPanel.Dock="Right" Width="20" HorizontalAlignment="Right" Margin="5,0,5,0" SnapsToDevicePixels="True" />
                    <TextBlock Text="{Binding }" />
                </DockPanel>
            </DataTemplate>

            <DataTemplate x:Key="HeaderTemplateArrowDown">
                <DockPanel LastChildFill="True" Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GridViewColumnHeader}}}">
                    <Path x:Name="arrowDown" StrokeThickness="1" Fill="Gray"  Data="M 5,5 L 10,10 L 15,5 L 5,5" DockPanel.Dock="Right" Width="20" HorizontalAlignment="Right" Margin="5,0,5,0" SnapsToDevicePixels="True" />
                    <TextBlock Text="{Binding }" />
                </DockPanel>
            </DataTemplate>

            <ControlTemplate x:Key="TextButtonTemplate" TargetType="Button">
                <Border BorderThickness="1" BorderBrush="Black" Background="{TemplateBinding Background}">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Opacity" Value="0.9" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="IconButtonTemplate" TargetType="Button">
                <Border MinWidth="35" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="LightGray" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!-- Styles -->
            <Style x:Key="TextButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Height" Value="auto" />
                <Setter Property="Width" Value="auto" />
                <Setter Property="MinWidth" Value="80" />
                <Setter Property="Margin" Value="0,0,10,0" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource TextButtonColor}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Template" Value="{StaticResource TextButtonTemplate}" />
            </Style>

            <Style x:Key="TextButtonSelectedStyle" TargetType="{x:Type Button}">
                <Setter Property="Height" Value="auto" />
                <Setter Property="Width" Value="auto" />
                <Setter Property="MinWidth" Value="80" />
                <Setter Property="Margin" Value="0,0,10,0" />
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource TextButtonColor}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" Value="White" />
                <Setter Property="Template" Value="{StaticResource TextButtonTemplate}" />
            </Style>

            <Style x:Key="IconButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="BorderBrush" Value="Gray" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template" Value="{StaticResource IconButtonTemplate}" />
            </Style>

        </ResourceDictionary>

    </UserControl.Resources>

    <DockPanel Margin="4">

        <itc:ViewSwitch DockPanel.Dock="Top" Visibility="{Binding ShowMaterialPool, Converter={StaticResource BooleanToVisibilityConverter}}">
            <TabItem Header="{itcl:Translate InputMaterialPool}" IsSelected="True" />
        </itc:ViewSwitch>

        <Grid>

            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!-- Raw Production Order ListDataItem Control -->
            <ListView   Grid.Row="0"
                        x:Name="MaterialPool"
                        Margin="4,8,4,8"                        
                        MaxHeight="200"
                        dd:DragDrop.IsDragSource="True"
                        dd:DragDrop.IsDropTarget="True"
                        dd:DragDrop.DropHandler="{Binding}"
                        ItemsSource="{Binding ReceivedItems, UpdateSourceTrigger=PropertyChanged}"
                        IsSynchronizedWithCurrentItem="True"
                        SelectionMode="Multiple"
                        GridViewColumnHeader.Click="OnMaterialPoolHeader_Click"
                        SelectionChanged="OnMaterialPool_SelectionChanged"
                        Loaded="OnMaterialPool_Loaded"
                        Visibility="{Binding ShowMaterialPool, Converter={StaticResource BooleanToVisibilityConverter}}">

                <ListView.Resources>

                    <!-- Empty List Container -->
                    <Style TargetType="ListView">
                        <Style.Triggers>
                            <Trigger Property="HasItems" Value="False">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListView">
                                            <Border Background="{TemplateBinding Background}" Height="40" BorderThickness="0.5" BorderBrush="Gray">
                                                <TextBlock Text="{itcl:Translate EmptyInputMaterialPool}" FontStyle="Italic" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <!-- List Item Container -->
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="IsSelected" Value="{Binding IsOrderSelected, Mode=OneWay, NotifyOnSourceUpdated=True }" />
                    </Style>

                    <!-- List Group Container -->
                    <Style x:Key="GroupContainerStyle" TargetType="Grid">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="{StaticResource TextButtonColor}" />
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <DataTemplate x:Key="GroupHeaderTemplate">
                        <Grid Style="{StaticResource GroupContainerStyle}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Expander}}, Path=Width}" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Content="{Binding}" />
                        </Grid>
                    </DataTemplate>
                    <Style x:Key="ListExpanderStyle" TargetType="{x:Type Expander}">
                        <Setter Property="HeaderTemplate" Value="{StaticResource GroupHeaderTemplate}" />
                    </Style>

                </ListView.Resources>

                <ListView.View>
                    <GridView>
                        <GridViewColumn CellTemplate="{StaticResource CheckBoxCell}" Width="30">
                            <GridViewColumn.Header>
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox x:Name="HeaderListViewCheckbox" Click="OnCheckBox_Click" />
                                </StackPanel>
                            </GridViewColumn.Header>
                        </GridViewColumn>
                        <GridViewColumn Header="{itcl:Translate MotherHeatNumber}" DisplayMemberBinding="{Binding MotherHeat.Name}" />
                        <GridViewColumn Header="{itcl:Translate MaterialOrderNumber}" DisplayMemberBinding="{Binding Name}" />
                        <GridViewColumn Header="{itcl:Translate SteelGrade }" DisplayMemberBinding="{Binding Grade.Name}" />
                        <GridViewColumn Header="{itcl:Translate MaterialNumber }" DisplayMemberBinding="{Binding HeatNumber}" />
                        <GridViewColumn Header="{itcl:Translate MotherHeatNumberBGH }" DisplayMemberBinding="{Binding Grade.Code}" />
                        <GridViewColumn Header="{itcl:Translate Count }" DisplayMemberBinding="{Binding Quantity}" />
                        <GridViewColumn Header="{itcl:Translate Format}" DisplayMemberBinding="{Binding ElectrodeFormat.Name}" />
                        <GridViewColumn Header="{itcl:Translate GlowGroup }" DisplayMemberBinding="{Binding GlowGroup}" />
                        <GridViewColumn Header="{itcl:Translate ScrapGroup }" DisplayMemberBinding="{Binding ScrapGroup}" />
                        <GridViewColumn Header="{itcl:Translate Comments }" DisplayMemberBinding="{Binding Comments}" />
                        <GridViewColumn Header="{itcl:Translate AssignedESR }" DisplayMemberBinding="{Binding Plant.Name, Converter={StaticResource LocalizeValueConverter}}" />
                        <GridViewColumn Header="{itcl:Translate DeliveryDate }" DisplayMemberBinding="{Binding DeliveryDate}" />
                        <GridViewColumn Header="{itcl:Translate HeatNumber }" DisplayMemberBinding="{Binding HeatNumber}" />
                    </GridView>
                </ListView.View>

                <ListView.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.ContainerStyle>
                            <Style TargetType="{x:Type GroupItem}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Expander IsExpanded="True" Style="{StaticResource ListExpanderStyle}">
                                                <Expander.Header>
                                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="10,2,10,2" HorizontalAlignment="Stretch">
                                                        <TextBlock Text="{Binding Name}" FontWeight="Bold" />
                                                        <TextBlock Text="{itcl:Translate Count}" FontStyle="Italic" Margin="15,0,0,0" />
                                                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" MinWidth="70" Margin="5,0,0,0">
                                                            <TextBlock Text="{Binding Path=Items, Converter={StaticResource ListGroupingToItemCountConverter}}" FontWeight="Bold" />
                                                            <TextBlock Text="{itcl:Translate OrdersLabel}" FontWeight="Bold" />
                                                        </StackPanel>
                                                        <TextBlock Text="{itcl:Translate DeliveryDate}" FontStyle="Italic" Margin="15,0,0,0" />
                                                        <TextBlock Text="{Binding Path=Items, Converter={StaticResource ListGroupingToDeliveryDateConverter}}" FontWeight="Bold" Margin="5,0,0,0" />
                                                        <CheckBox IsChecked="{Binding Path=IsOrderSelected}" Click="OnGroupCheckBox_Click" Tag="{Binding Name}" Margin="15,0,0,0" />
                                                    </StackPanel>
                                                </Expander.Header>
                                                <ItemsPresenter />
                                            </Expander>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </GroupStyle.ContainerStyle>
                    </GroupStyle>
                </ListView.GroupStyle>

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <itc:RequeryCommandActivity />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ListView>

            <GridSplitter Grid.Row="0" VerticalAlignment="Bottom" Height="15" Visibility="{Binding ShowMaterialPool, Converter={StaticResource BooleanToVisibilityConverter}}" />

            <Grid Grid.Row="1">

                <Grid.Resources>
                    <GridView x:Key="PlannerGridViewColumns" AllowsColumnReorder="False">
                        <GridViewColumn Header="{itcl:Translate Plant}" DisplayMemberBinding="{Binding Plant.Name, Converter={StaticResource PlantNameHackConverter}}">
                            <GridViewColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding}" Padding="20,0,0,0" />
                                </DataTemplate>
                            </GridViewColumn.HeaderTemplate>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <TextBlock Text="{Binding}" />
                                    </StackPanel>                                    
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="{itcl:Translate MotherHeatNumber}" DisplayMemberBinding="{Binding MotherHeat.Name}" />
                        <GridViewColumn Header="{itcl:Translate MaterialOrderNumber}" DisplayMemberBinding="{Binding Name}" />
                        <GridViewColumn Header="{itcl:Translate HeatNumber}" DisplayMemberBinding="{Binding HeatNumber}" />
                        <GridViewColumn Header="{itcl:Translate SteelGrade}" DisplayMemberBinding="{Binding Grade.Name}" />
                        <GridViewColumn Header="{itcl:Translate Status}">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding ProductionOrderStatus.Name, Converter={StaticResource LocalizeValueConverter}}" VerticalAlignment="Center" />
                                        <Image Width="25" Height="25" Source="../Icons/info.png" VerticalAlignment="Center" Visibility="{Binding Converter={StaticResource ProductionOrderStatusToInfoVisibilityConverter}}" />
                                    </StackPanel>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="{itcl:Translate DeliveryDate}" DisplayMemberBinding="{Binding DeliveryDate}" />
                        <GridViewColumn Header="{itcl:Translate Format}" DisplayMemberBinding="{Binding ElectrodeFormat.Name}" />
                        <GridViewColumn Header="{itcl:Translate RequestWeight}" DisplayMemberBinding="{Binding RequestWeight, TargetNullValue={x:Static System:String.Empty}, StringFormat={}{0} kg}" />
                        <GridViewColumn Header="{itcl:Translate GlowGroup }" DisplayMemberBinding="{Binding GlowGroup}" />
                        <GridViewColumn Header="{itcl:Translate Count}" DisplayMemberBinding="{Binding Quantity}" />
                        <!--<GridViewColumn Header="{itcl:Translate ChargeNumber}" DisplayMemberBinding="{Binding ChargesNumber, TargetNullValue={x:Static System:String.Empty}}" />-->
                        <GridViewColumn Header="{itcl:Translate Comments}" DisplayMemberBinding="{Binding Comments}" />
                        <GridViewColumn Header="{itcl:Translate DataSheet}">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Image Grid.Column="0" Source="{Binding Converter={StaticResource DataSheetToIconConverter}}"
                                               Width="25" Height="25" HorizontalAlignment="Center" VerticalAlignment="Center"
                                               Visibility="{Binding NotGroupHeader, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <Image.ToolTip>
                                                <MultiBinding Converter="{StaticResource DataSheetToTooltipConverter}">
                                                    <Binding Path="ProductionOrderStatus" />
                                                    <Binding ElementName="PlannedItems" Path="DataContext.DataSheetTooltipMessages" />
                                                </MultiBinding>
                                            </Image.ToolTip>
                                        </Image>
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="{itcl:Translate OperationCard}">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Image Grid.Column="0" Source="{Binding Converter={StaticResource OperationCardToIconConverter}}"
                                               Width="30" Height="30" HorizontalAlignment="Center" VerticalAlignment="Center"
                                               Visibility="{Binding NotGroupHeader, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <Image.ToolTip>
                                                <MultiBinding Converter="{StaticResource OperationCardToTooltipConverter}">
                                                    <Binding Path="HasAdditionalData" />
                                                    <Binding ElementName="PlannedItems" Path="DataContext.OperationCardTooltipMessages" />
                                                </MultiBinding>
                                            </Image.ToolTip>
                                        </Image>
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn CellTemplate="{StaticResource CheckBoxCell}" Width="30" />
                    </GridView>
                </Grid.Resources>

                <Grid.RowDefinitions>
                    <RowDefinition Height="50" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0" Orientation="Horizontal" Height="30" VerticalAlignment="Center" Margin="4,15,0,0">
                    <Button x:Name="All" Style="{StaticResource TextButtonSelectedStyle}" Click="Button_Click_ESR_Filter">
                        <TextBlock Text="{itcl:Translate AllPlants}" TextAlignment="Center" />
                    </Button>
                    <Button x:Name="ESR2" Style="{StaticResource TextButtonStyle}" Click="Button_Click_ESR_Filter">
                        <TextBlock Text="{itcl:Translate ESR2}" TextAlignment="Center" />
                    </Button>
                    <Button x:Name="ESR3" Style="{StaticResource TextButtonStyle}" Click="Button_Click_ESR_Filter">
                        <TextBlock Text="{itcl:Translate ESR3}" TextAlignment="Center" />
                    </Button>
                    <Button x:Name="ESR4" Style="{StaticResource TextButtonStyle}" Click="Button_Click_ESR_Filter">
                        <TextBlock Text="{itcl:Translate ESR4}" TextAlignment="Center" />
                    </Button>
                    <Button x:Name="ESR5" Style="{StaticResource TextButtonStyle}" Click="Button_Click_ESR_Filter">
                        <TextBlock Text="{itcl:Translate ESR5}" TextAlignment="Center" />
                    </Button>
                    <Button x:Name="ESR6" Style="{StaticResource TextButtonStyle}" Click="Button_Click_ESR_Filter">
                        <TextBlock Text="{itcl:Translate ESR6}" TextAlignment="Center" />
                    </Button>

                    <Button Style="{StaticResource IconButtonStyle}" ToolTip="{itcl:Translate TooltipExport}" Margin="10,0,0,0" Click="Button_Click_Excel_Export">
                        <Image Source="../Icons/export.png" />
                    </Button>
                    <Button Style="{StaticResource IconButtonStyle}" ToolTip="{itcl:Translate Tooltip_Refresh}" Command="{Binding RefreshCommand, FallbackValue={x:Null}}" Margin="10,0,0,0">
                        <Image Source="../Icons/refresh.png" />
                    </Button>
                    <Button Style="{StaticResource IconButtonStyle}" ToolTip="{itcl:Translate Tooltip_Save}" Click="Button_Click_Save" Margin="10,0,0,0">
                        <Image Source="../Icons/save.png" />
                    </Button>
                </StackPanel>

                <!-- Planned Production Order ListDataItem Control -->
                <ListView Grid.Row="1"
                        x:Name="PlannedItems"
                        dd:DragDrop.IsDragSource="True"
                        dd:DragDrop.IsDropTarget="True"
                        dd:DragDrop.DropHandler="{Binding}"
                        Margin="4,8,4,8"
                        SelectionMode="Multiple"
                        IsSynchronizedWithCurrentItem="True"
                        SelectionChanged="OnPlannedItems_SelectionChanged"
                        ItemsSource="{Binding PlannedItems, UpdateSourceTrigger=PropertyChanged}"
                        View="{StaticResource PlannerGridViewColumns}">

                    <ListView.Resources>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="Background" Value="{Binding Converter={StaticResource ProductionOrderToBackgroundConverter}}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <Border Background="{TemplateBinding Background}">
                                            <GridViewRowPresenter Content="{TemplateBinding Content}" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.Resources>

                    <ListView.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.ContainerStyle>
                                <Style TargetType="{x:Type GroupItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Expander IsExpanded="True" Background="{Binding Items[0], Converter={StaticResource ListGroupingToGroupItemBackgroundConverter}, UpdateSourceTrigger=PropertyChanged}">
                                                    <Expander.Header>
                                                        <StackPanel VerticalAlignment="Center" Height="auto" Margin="-21,0,0,0">
                                                            <GridViewRowPresenter Columns="{Binding ElementName=PlannedItems, Path=DataContext.PlannerColumnCollection}" VerticalAlignment="Center">
                                                                <GridViewRowPresenter.Content>
                                                                    <MultiBinding Converter="{StaticResource ListGroupingToGroupItemConverter}">
                                                                        <Binding Path="Items" UpdateSourceTrigger="PropertyChanged" />
                                                                        <Binding ElementName="PlannedItems" Path="DataContext.PlannedItems" />
                                                                    </MultiBinding>
                                                                </GridViewRowPresenter.Content>
                                                            </GridViewRowPresenter>
                                                        </StackPanel>
                                                    </Expander.Header>
                                                    <Expander.Content>
                                                        <ItemsPresenter />
                                                    </Expander.Content>
                                                </Expander>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GroupStyle.ContainerStyle>
                        </GroupStyle>
                    </ListView.GroupStyle>

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <itc:RequeryCommandActivity />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListView>

            </Grid>

        </Grid>

    </DockPanel>
</UserControl>
